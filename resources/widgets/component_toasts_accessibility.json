{
    "items": {
        "title": "Accessibility ",
        "description": "Toasts are intended to be small interruptions to your visitors or users, so to help those with screen readers and similar assistive technologies, you should wrap your toasts in an aria-live region. Changes to live regions (such as injecting\/updating a toast component) are automatically announced by screen readers without needing to move the user’s focus or otherwise interrupt the user. Additionally, include aria-atomic=\"true\" to ensure that the entire toast is always announced as a single (atomic) unit, rather than just announcing what was changed (which could lead to problems if you only update part of the toast’s content, or if displaying the same toast content at a later point in time). If the information needed is important for the process, e.g. for a list of errors in a form, then use the alert component instead of toast.\n\nNote that the live region needs to be present in the markup before the toast is generated or updated. If you dynamically generate both at the same time and inject them into the page, they will generally not be announced by assistive technologies.\n\nYou also need to adapt the role and aria-live level depending on the content. If it’s an important message like an error, use role=\"alert\" aria-live=\"assertive\", otherwise use role=\"status\" aria-live=\"polite\" attributes.\n\nAs the content you’re displaying changes, be sure to update the delay timeout so that users have enough time to read the toast.",
        "code": "<div class=\"toast\" role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\" data-bs-delay=\"10000\">\n  <div role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">...<\/div>\n<\/div>",
        "updated_at": "2024-07-02 09:56:48"
    }
}